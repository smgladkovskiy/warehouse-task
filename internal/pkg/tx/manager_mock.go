// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/avito-tech/go-transaction-manager/trm (interfaces: Manager)
//
// Generated by this command:
//
//	mockgen -destination=manager_mock.go -package=tx -mock_names Manager=TransactionManagerMock github.com/avito-tech/go-transaction-manager/trm Manager
//

// Package tx is a generated GoMock package.
package tx

import (
	context "context"
	reflect "reflect"

	trm "github.com/avito-tech/go-transaction-manager/trm"
	gomock "go.uber.org/mock/gomock"
)

// TransactionManagerMock is a mock of Manager interface.
type TransactionManagerMock struct {
	ctrl     *gomock.Controller
	recorder *TransactionManagerMockMockRecorder
}

// TransactionManagerMockMockRecorder is the mock recorder for TransactionManagerMock.
type TransactionManagerMockMockRecorder struct {
	mock *TransactionManagerMock
}

// NewTransactionManagerMock creates a new mock instance.
func NewTransactionManagerMock(ctrl *gomock.Controller) *TransactionManagerMock {
	mock := &TransactionManagerMock{ctrl: ctrl}
	mock.recorder = &TransactionManagerMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *TransactionManagerMock) EXPECT() *TransactionManagerMockMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *TransactionManagerMock) Do(arg0 context.Context, arg1 func(context.Context) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Do indicates an expected call of Do.
func (mr *TransactionManagerMockMockRecorder) Do(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*TransactionManagerMock)(nil).Do), arg0, arg1)
}

// DoWithSettings mocks base method.
func (m *TransactionManagerMock) DoWithSettings(arg0 context.Context, arg1 trm.Settings, arg2 func(context.Context) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoWithSettings", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DoWithSettings indicates an expected call of DoWithSettings.
func (mr *TransactionManagerMockMockRecorder) DoWithSettings(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoWithSettings", reflect.TypeOf((*TransactionManagerMock)(nil).DoWithSettings), arg0, arg1, arg2)
}
